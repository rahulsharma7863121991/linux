#!/bin/bash
echo "welcome to the wordpress installer"
echo "please enter your domain name"
read domain
echo "127.0.0.1 $domain" >> /etc/hosts
echo "Checking for the LEMP packages"
if ( dpkg-query -W -f='${Status} ${Version}\n' nginx | grep -w "install" )
then
echo "nginx is already installed"
else
sudo apt-get install nginx
fi
echo "Mysql check"
if ( dpkg-query -W -f='${Status} ${Version}\n' mysql-server php5-mysql | grep -w "install" )
then
echo "mysql is already installed"
else
sudo apt-get install nginx mysql-server php5 php5-mysql php5-gd php5-fpm
fi
mysql_secure_installation
start mysql
echo "$(sudo apt-get install php-curl php-gd php-mbstring php-mcrypt php-xml php-xmlrpc)"
mkdir -p /var/www/nginx/
wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
sudo php wp-cli.phar --info --allow-root
chmod +x wp-cli.phar
sudo mv wp-cli.phar /usr/local/bin/wp
sudo wp --info --allow-root
echo "create database wordpress" | mysql -h localhost -u root --password="sysinfocom"
echo "create user wordpressuser@localhost identified by 'password' " | mysql -h localhost -u root --password="sysinfocom"
echo "GRANT ALL PRIVILEGES ON wordpress.* TO wordpressuser@localhost" | mysql -h localhost -u root --password="sysinfocom"
echo "flush privileges" | mysql -h localhost -u root --password="sysinfocom"
echo "exit" | mysql -h localhost -u root --password="sysinfocom"
/etc/init.d/mysql restart
service php5-fpm restart
echo "Now configuring some php parameters"
echo "cgi.fix_pathinfo=1" >> /etc/php5/fpm/php.ini
echo "restarting the php5 service"
service php5-fpm restart
echo "Now setting up the nginx server blocks"
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/wordpress
rm -rf /etc/nginx/sites-available/default
echo " # You may add here your
# server {
# ...
# }
# statements for each of your virtual hosts to this file
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
server {
listen 80; ## listen for ipv4; this line is default and implied
#listen [::]:80 default ipv6only=on; ## listen for ipv6
root /var/www/nginx/;
index index.php index.html index.htm;
#Make site accessible from http://localhost/
server_name $domain;
location / {
# First attempt to serve request as file, then
# as directory, then fall back to index.html
#try_files uri uri/ /index.php;
# try_files uri uri/ /index.php?q=uri&args;
try_files uri uri/ /index.php?q=uri&args;
# Uncomment to enable naxsi on this location
# include /etc/nginx/naxsi.rules
}
# location /doc/ {
# alias /usr/share/doc/;
# autoindex on;
# allow 127.0.0.1;
# deny all;
# }
# Only for nginx-naxsi : process denied requests
#location /RequestDenied {
# For example, return an error code
#return 418;
#}
#error_page 404 /404.html;
# redirect server error pages to the static page /50x.html
#
#error_page 500 502 503 504 /50x.html;
#location = /50x.html {
# root /usr/share/nginx/www;
#}
#location ~* \.php$ {
# try_files @ @proxy;
#}
# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
location ~ \.php$ {
fastcgi_split_path_info ^(.+\.php)(/.+)$;
# # NOTE: You should have cgi.fix_pathinfo = 0; in php.ini
#
try_files uri =404;
# With php5-cgi alone:
fastcgi_pass 127.0.0.1:9000;
# With php5-fpm:
#fastcgi_pass unix:/var/run/php5-fpm.sock;
fastcgi_index index.php;
include fastcgi_params;
}
# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
# deny all;
#}
}
# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
# listen 8000;
# listen somename:8080;
# server_name somename alias another.alias;
# root html;
# index index.html index.htm;
#
# location / {
# try_files uri uri/ /index.html;
# }
#}
# HTTPS server
#
#server {
# listen 443;
# server_name localhost;
#
# root html;
# index index.html index.htm;
#
# ssl on;
# ssl_certificate cert.pem;
# ssl_certificate_key cert.key;
#
# ssl_session_timeout 5m;
#
# ssl_protocols SSLv3 TLSv1;
# ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
# ssl_prefer_server_ciphers on;
#
# location / {
# try_files uri uri/ /index.html;
# }
#} " > /etc/nginx/sites-available/wordpress
sed -i -e 's/uri/$uri/g' /etc/nginx/sites-available/wordpress
sed -i -e 's/args/$args/g' /etc/nginx/sites-available/wordpress
echo "now creating link for the server-block activation"
ln -s /etc/nginx/sites-available/wordpress /etc/nginx/sites-enabled/
cd /var/www/nginx
sudo wp core download --allow-root
sudo wp core config --dbname=wordpress --dbuser=wordpressuser --dbhost=localhost --dbpass='password' --allow-root
sudo wp core install --url=$domain --title=kumarsanuworld --admin_user=rahul --admin_password=sysinfocom --admin_email=adisharma96@gmail.com --allow-root
chmod -R 755 /var/www/nginx/
chown -R www-data:www-data /var/www/nginx
echo "restarting nginx webserver and stopping apache2 if installed"
service apache2 stop
service nginx restart
echo "visit your domain"
echo "*****thanks****"
